disk2s2-2:project2-RONRonline airbr$ grep -r "todos" .
Binary file ./.git/index matches
./espm/app.js:var todosRouter = require('./routes/todos');
./espm/app.js:mongoose.connect('mongodb://localhost/todos');
./espm/app.js:app.use('/todos', todosRouter);
./espm/bin/www:var debug = require('debug')('todos:server');
./espm/models/user.js:  todos : [Todo.schema]
./espm/package.json:  "name": "todos",
./espm/routes/index.js:    successRedirect : '/todos',
./espm/routes/index.js:    successRedirect : '/todos',
./espm/routes/todos.js:  // var todos = global.currentUser.todos;
./espm/routes/todos.js:  res.render('todos/index', { todos: todos, message: req.flash() });
./espm/routes/todos.js:  res.render('todos/new', { todo: todo, message: req.flash() });
./espm/routes/todos.js://   res.render('todos/new', { todo: todo } );
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:  res.render('todos/show', { todo: todo, message: req.flash() } );
./espm/routes/todos.js://     res.render('todos/show', { todo: todo });
./espm/routes/todos.js:  // Since a user's todos are an embedded document, we just need to push a new
./espm/routes/todos.js:  // TODO to the user's list of todos and save the user.
./espm/routes/todos.js:  currentUser.todos.push(todo);
./espm/routes/todos.js:    res.redirect('/todos');
./espm/routes/todos.js://     res.redirect('/todos');
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:  res.render('todos/edit', { todo: todo, message: req.flash() } );
./espm/routes/todos.js://     res.render('todos/edit', { todo: todo });
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:      res.redirect('/todos');
./espm/routes/todos.js://     res.redirect('/todos');
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:  var index = currentUser.todos.indexOf(todo);
./espm/routes/todos.js:  currentUser.todos.splice(index, 1);
./espm/routes/todos.js:    res.redirect('/todos');
./espm/routes/todos.js://     res.redirect('/todos');
./espm/routes/todos.js:    res.redirect('/todos');
./espm/run.bash:DEBUG=todos:* npm start
./espm/seeds.js:mongoose.connect('mongodb://localhost/todos');
./espm/seeds.js:console.log('removing old todos...');
./espm/seeds.js:  console.log('old todos removed');
./espm/seeds.js:  console.log('creating some new todos...');
./espm/seeds.js:  console.log('Just saved', savedTodos.length, 'todos.');
./espm/seeds.js:  console.log('Printing all todos:');
./espm/seeds.js:  console.log('Printing all todos:');
./espm/views/partials/header.ejs:        <li><a href="/todos">TODOs</a></li>
./espm/views/todos/edit.ejs:    <form class="todo-form" action="/todos/<%= todo._id %>?_method=PUT" method="post">
./espm/views/todos/edit.ejs:      <a href="/todos/<%= todo._id %>" class="btn btn-primary">Back</a>
./espm/views/todos/index.ejs:      <% todos.forEach(function(todo) { %>
./espm/views/todos/index.ejs:          <form method="POST" action="/todos/<%= todo._id %>?_method=DELETE">
./espm/views/todos/index.ejs:            <a href="/todos/<%= todo._id %>">
./espm/views/todos/index.ejs:    <a href="/todos/new" class="btn btn-primary">New</a>
./espm/views/todos/new.ejs:    <form class="todo-form" action="/todos" method="post">
./espm/views/todos/new.ejs:      <a href="/todos" class="btn btn-primary">Back</a>
./espm/views/todos/show.ejs:    <a href="/todos" class="btn btn-primary">Back</a>
./espm/views/todos/show.ejs:    <a href="/todos/<%= todo._id %>/edit" class="btn btn-danger">Edit</a>
Binary file ./express-security-with-passport-master.zip matches

---


disk2s2-2:project2-RONRonline airbr$ grep -r "todo" .
Binary file ./.git/index matches
./espm/app.js:var todosRouter = require('./routes/todos');
./espm/app.js:mongoose.connect('mongodb://localhost/todos');
./espm/app.js:app.use('/todos', todosRouter);
./espm/bin/www:var debug = require('debug')('todos:server');
./espm/models/user.js:var Todo = require('./todo');
./espm/models/user.js:  todos : [Todo.schema]
./espm/node_modules/iconv-lite/encodings/dbcs-codec.js:            // See todo above.
./espm/node_modules/raw-body/node_modules/iconv-lite/encodings/dbcs-codec.js:            // See todo above.
./espm/package.json:  "name": "todos",
./espm/public/stylesheets/style.css:.todo-form {
./espm/routes/index.js:    successRedirect : '/todos',
./espm/routes/index.js:    successRedirect : '/todos',
./espm/routes/todos.js:var Todo = require('../models/todo');
./espm/routes/todos.js:  // var todos = global.currentUser.todos;
./espm/routes/todos.js:  res.render('todos/index', { todos: todos, message: req.flash() });
./espm/routes/todos.js:  var todo = {
./espm/routes/todos.js:  res.render('todos/new', { todo: todo, message: req.flash() });
./espm/routes/todos.js://   var todo = {
./espm/routes/todos.js://   res.render('todos/new', { todo: todo } );
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:  if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js:  res.render('todos/show', { todo: todo, message: req.flash() } );
./espm/routes/todos.js://   .then(function(todo) {
./espm/routes/todos.js://     if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js://     res.render('todos/show', { todo: todo });
./espm/routes/todos.js:  var todo = {
./espm/routes/todos.js:  // Since a user's todos are an embedded document, we just need to push a new
./espm/routes/todos.js:  // TODO to the user's list of todos and save the user.
./espm/routes/todos.js:  currentUser.todos.push(todo);
./espm/routes/todos.js:    res.redirect('/todos');
./espm/routes/todos.js://   var todo = new Todo({
./espm/routes/todos.js://   todo.save()
./espm/routes/todos.js://     res.redirect('/todos');
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:  if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js:  res.render('todos/edit', { todo: todo, message: req.flash() } );
./espm/routes/todos.js://   .then(function(todo) {
./espm/routes/todos.js://     if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js://     res.render('todos/edit', { todo: todo });
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:  if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js:    todo.title = req.body.title;
./espm/routes/todos.js:    todo.completed = req.body.completed ? true : false;
./espm/routes/todos.js:      res.redirect('/todos');
./espm/routes/todos.js://   .then(function(todo) {
./espm/routes/todos.js://     if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js://     todo.title = req.body.title;
./espm/routes/todos.js://     todo.completed = req.body.completed ? true : false;
./espm/routes/todos.js://     return todo.save();
./espm/routes/todos.js://     res.redirect('/todos');
./espm/routes/todos.js:  var todo = currentUser.todos.id(req.params.id);
./espm/routes/todos.js:  if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js:  var index = currentUser.todos.indexOf(todo);
./espm/routes/todos.js:  currentUser.todos.splice(index, 1);
./espm/routes/todos.js:    res.redirect('/todos');
./espm/routes/todos.js://     res.redirect('/todos');
./espm/routes/todos.js:  .then(function(todo) {
./espm/routes/todos.js:    if (!todo) return next(makeError(res, 'Document not found', 404));
./espm/routes/todos.js:    todo.completed = !todo.completed;
./espm/routes/todos.js:    return todo.save();
./espm/routes/todos.js:    res.redirect('/todos');
./espm/run.bash:DEBUG=todos:* npm start
./espm/seeds.js:var Todo = require('./models/todo');
./espm/seeds.js:mongoose.connect('mongodb://localhost/todos');
./espm/seeds.js:console.log('removing old todos...');
./espm/seeds.js:  console.log('old todos removed');
./espm/seeds.js:  console.log('creating some new todos...');
./espm/seeds.js:  console.log('Just saved', savedTodos.length, 'todos.');
./espm/seeds.js:  console.log('Printing all todos:');
./espm/seeds.js:  allTodos.forEach(function(todo) {
./espm/seeds.js:    console.log(todo);
./espm/seeds.js:  console.log('Printing all todos:');
./espm/seeds.js:  allTodos.forEach(function(todo) {
./espm/seeds.js:    console.log(todo);
./espm/views/partials/header.ejs:        <li><a href="/todos">TODOs</a></li>
./espm/views/todos/_form.ejs:         value="<%= todo.title %>">
./espm/views/todos/_form.ejs:         <%= todo.completed ? 'checked' : '' %> >
./espm/views/todos/edit.ejs:    <form class="todo-form" action="/todos/<%= todo._id %>?_method=PUT" method="post">
./espm/views/todos/edit.ejs:      <a href="/todos/<%= todo._id %>" class="btn btn-primary">Back</a>
./espm/views/todos/index.ejs:      <% todos.forEach(function(todo) { %>
./espm/views/todos/index.ejs:          <form method="POST" action="/todos/<%= todo._id %>?_method=DELETE">
./espm/views/todos/index.ejs:            <a href="/todos/<%= todo._id %>">
./espm/views/todos/index.ejs:              <%= todo.title + ' - ' + todo.completed %>
./espm/views/todos/index.ejs:    <a href="/todos/new" class="btn btn-primary">New</a>
./espm/views/todos/new.ejs:    <form class="todo-form" action="/todos" method="post">
./espm/views/todos/new.ejs:      <a href="/todos" class="btn btn-primary">Back</a>
./espm/views/todos/show.ejs:      <p><b>Title: </b><%= todo.title %></p>
./espm/views/todos/show.ejs:      <p><b>ID: </b><%= todo._id %></p>
./espm/views/todos/show.ejs:        <% if (todo.completed) { %>
./espm/views/todos/show.ejs:      <p><b>Created: </b><%= todo.getCreatedAt() %></p>
./espm/views/todos/show.ejs:      <p><b>Last Updated: </b><%= todo.getUpdatedAt() %></p>
./espm/views/todos/show.ejs:    <a href="/todos" class="btn btn-primary">Back</a>
./espm/views/todos/show.ejs:    <a href="/todos/<%= todo._id %>/edit" class="btn btn-danger">Edit</a>
Binary file ./express-security-with-passport-master.zip matches
